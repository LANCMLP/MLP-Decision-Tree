{"version":3,"sources":["App.js","components/editable-item/index.js","components/editable-item/editable-item.js","components/tree-node/index.js","components/tree-node/tree-node.js","components/add-button/index.js","components/add-button/add-button.js","components/control-panel/index.js","components/control-panel/control-panel.js","components/text-view/index.js","components/text-view/text-view.js","Download.jsx","components/tree/index.js","components/tree/tree.js","constants.js","serviceWorker.js","index.js"],"names":["fileReader","EditableItem","props","title","changeTitle","removeNode","addChild","react_default","a","createElement","className","rel","href","integrity","crossOrigin","onClick","onChange","e","target","value","placeholder","xmlns","width","height","fill","viewBox","d","TreeNode","_ref","children","otherProps","Object","objectWithoutProperties","hasChildren","undefined","components_editable_item","map","nodeProps","id","others","assign","key","renderChildren","AddButton","ControlPanel","hasSaved","saveState","loadState","TextView","Download","data","myString4","JSON","stringify","replace","Fragment","concat","encodeURIComponent","download","Tree","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","nodes","initialized–°opy","savedNodes","bind","assertThisInitialized","addRootElement","onTextChange","nodesToString","location","nodesCopy","i","length","_nodes$i","_this2","newTitle","split","str","parseInt","changingNode","setState","newNode","toConsumableArray","_this3","join","_this4","newNodes","slice","index","newChildren","parse","simplify","_nodes$i2","_this$state","components_control_panel","components_tree_node","components_add_button","src_Download","components_text_view","Component","DEFAULT_NODES","App","newData","myData","uploadedData","updatedKey","handleFileChosen","file","FileReader","readAsText","onloadend","handleFileRead","content","result","console","log","handleForceUpdate","type","files","components_tree","React","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2c2cae7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Tree from \"./components/tree\";\nimport { DEFAULT_NODES } from \"./constants\";\n\nvar fileReader;\n\nclass App extends React.Component {\n  state = {\n    newData: false,\n    myData: DEFAULT_NODES,\n    uploadedData: null,\n    updatedKey: 1,\n  };\n\n  handleFileChosen = (file) => {\n    fileReader = new FileReader();\n    fileReader.readAsText(file);\n    fileReader.onloadend = this.handleFileRead;\n  };\n\n  handleFileRead = () => {\n    const content = fileReader.result;\n    console.log(content);\n    console.log(this.state);\n\n    this.setState(\n      {\n        newData: true,\n        uploadedData: JSON.parse(content),\n      },\n      () => {\n        console.log(this.state.newData);\n        console.log(this.state);\n      }\n    );\n  };\n\n  handleForceUpdate = () => {\n    this.setState({ updatedKey: 2 });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          <input\n            type=\"file\"\n            onChange={(e) => this.handleFileChosen(e.target.files[0])}\n          />\n          <button onClick={this.handleForceUpdate}>Click Here to Upload</button>\n        </div>\n        <Tree\n          key={this.state.updatedKey}\n          data={\n            this.state.newData === true\n              ? this.state.uploadedData\n              : this.state.myData\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import EditableItem from \"./editable-item\";\nexport default EditableItem;","import React from \"react\";\nimport \"./editable-item.css\";\n// import { MyVerticallyCenteredModal } from \"./Modal\";\n\nconst EditableItem = (props) => {\n  const { title, changeTitle, removeNode, addChild } = props;\n\n  // const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <div className=\"EditableItem\">\n      <link\n        rel=\"stylesheet\"\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\"\n        integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\"\n        crossOrigin=\"anonymous\"\n      ></link>\n\n      {/* <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onInput={(value) => changeTitle(value)}\n      /> */}\n\n      <button\n        className=\"EditableItem-Button EditableItem-Button_add\"\n        onClick={addChild}\n      >\n        +\n      </button>\n\n      <button\n        className=\"EditableItem-Button EditableItem-Button_remove\"\n        onClick={removeNode}\n      >\n        x\n      </button>\n\n      <input\n        className=\"EditableItem-Text enable-select\"\n        onChange={(e) => {\n          changeTitle(e.target.value);\n        }}\n        value={title}\n        placeholder=\"New Item\"\n      />\n\n      <button\n        className=\"EditableItem-Button EditableItem-Button_popup\"\n        // onClick={() => setModalShow(true)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"currentColor\"\n          className=\"bi bi-pen\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z\" />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default EditableItem;\n","import TreeNode from \"./tree-node\";\nexport default TreeNode;","import React from \"react\";\nimport EditableItem from \"../editable-item\";\nimport \"./tree-node.css\";\n\nconst TreeNode = ({ children, ...otherProps }) => {\n  const hasChildren = children !== undefined;\n\n  const renderChildren = (children) => {\n    return (\n      <ul>\n        {children.map((nodeProps) => {\n          const { id, ...others } = nodeProps;\n          return <TreeNode key={id} {...others} />;\n        })}\n      </ul>\n    );\n  };\n\n  return (\n    <li>\n      <div className=\"TreeNode\">\n        <EditableItem {...otherProps} />\n      </div>\n      {hasChildren && renderChildren(children)}\n    </li>\n  );\n};\n\nexport default TreeNode;\n","import AddButton from \"./add-button\";\nexport default AddButton;","import React from \"react\";\nimport \"./add-button.css\";\n\nconst AddButton = ({ onClick }) => {\n  return (\n    <div className=\"AddButton\">\n      <button className=\"AddButton-Inner\" onClick={onClick} value>\n        +\n      </button>\n      <div className=\"addbutton-text\">\n        <div id=\"editing-instructions\">\n          <br></br>\n          <b>Editing Instructions:</b>\n          <br></br>\n          Click the \"+\" above to add a new parent node.\n          <br></br>\n          Clicking the \"+\" next to a tree entry will generate a new child node.\n          <br></br>\n          Clicking the \"x\" next to a tree entry will delete that entry.\n          <br></br>\n          Each branch of the tree must end with a result code.\n        </div>\n        <div id=\"upload-instructions\">\n          <br></br>\n          <b>Upload and Download Instructions:</b>\n          <br></br>\n          Click \"browse\" at the top of the page to select a JSON file from your\n          local disk. Then, use \"click here to upload\" to import it into this\n          page for editing.\n          <br></br>\n          After you are done editing, click \"download json\" in the top-right\n          corner. This will prompt you to save a copy of your work on your local\n          disk.\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddButton;\n","import ControlPanel from \"./control-panel\";\nexport default ControlPanel;","import React from \"react\";\nimport \"./control-panel.css\";\n\nconst ControlPanel = (props) => {\n    const { hasSaved, saveState, loadState } = props;\n    const renderLoadButton = () => {\n        if (hasSaved) {\n            return (\n                <button className=\"ControlPanel-Button ControlPanel-Button_load\" \n                  onClick={loadState}>\n                    Load\n                </button>\n            );\n        }\n        return null;\n    }\n\n    return (\n        <div className=\"ControlPanel\">\n            <button className=\"ControlPanel-Button ControlPanel-Button_save\" \n              onClick={saveState}>\n                Save\n            </button>\n            { renderLoadButton() }\n        </div>\n    );\n\n}\n\nexport default ControlPanel;","import TextView from \"./text-view\";\nexport default TextView;","import React from \"react\";\nimport \"./text-view.css\";\n\nconst TextView = ({ onChange, value }) => {\n  return (\n    <div className=\"TextView\">\n      <textarea\n        id=\"myTextArea\"\n        className=\"TextView-Area\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default TextView;\n","import React from \"react\";\r\nimport \"../src/App.css\";\r\n\r\nconst Download = (data) => {\r\n  let myString = JSON.stringify(data);\r\n  let myString2 = myString.replace('{\"data\":', \"\");\r\n  let myString3 = myString2 + \"xd\";\r\n  let myString4 = myString3.replace(\"}xd\", \"\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <a\r\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(myString4)}`}\r\n        download=\"MLPTreeData.json\"\r\n      >\r\n        <button className=\"download-button\">Download Json</button>\r\n      </a>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import Tree from \"./tree\";\nexport default Tree;\n","import React, { Component } from \"react\";\nimport TreeNode from \"../tree-node\";\nimport AddButton from \"../add-button\";\nimport ControlPanel from \"../control-panel\";\nimport TextView from \"../text-view\";\nimport \"./tree.css\";\nimport Download from \"../../Download\";\n\nclass Tree extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: this.initialized–°opy(this.props.data),\n      savedNodes: [],\n      key: 1,\n    };\n    this.changeTitle = this.changeTitle.bind(this);\n    this.addRootElement = this.addRootElement.bind(this);\n    this.addChild = this.addChild.bind(this);\n    this.removeNode = this.removeNode.bind(this);\n    this.saveState = this.saveState.bind(this);\n    this.loadState = this.loadState.bind(this);\n    this.onTextChange = this.onTextChange.bind(this);\n    this.nodesToString = this.nodesToString.bind(this);\n  }\n\n  initialized–°opy(nodes, location) {\n    const nodesCopy = [];\n    for (let i = 0; i < nodes.length; i++) {\n      const { children, title } = nodes[i];\n      const hasChildren = children !== undefined;\n      const id = location ? `${location}.${i + 1}` : `${i + 1}`;\n      nodesCopy[i] = {\n        children: hasChildren ? this.initialized–°opy(children, id) : undefined,\n        changeTitle: this.changeTitle(id),\n        removeNode: this.removeNode(id),\n        addChild: this.addChild(id),\n        id,\n        title,\n      };\n    }\n    return nodesCopy;\n  }\n\n  changeTitle(id) {\n    return (newTitle) => {\n      id = id.split(\".\").map((str) => parseInt(str));\n      const nodes = this.initialized–°opy(this.state.nodes);\n      let changingNode = nodes[id[0] - 1];\n\n      if (id.length > 1) {\n        for (let i = 1; i < id.length; i++) {\n          changingNode = changingNode.children[id[i] - 1];\n        }\n      }\n\n      changingNode.title = newTitle;\n      this.setState({ nodes });\n    };\n  }\n\n  addRootElement() {\n    const id = this.state.nodes.length ? `${this.state.nodes.length + 1}` : \"1\";\n    const newNode = {\n      children: undefined,\n      changeTitle: this.changeTitle(id),\n      removeNode: this.removeNode(id),\n      addChild: this.addChild(id),\n      id,\n      title: \"\",\n    };\n\n    const nodes = [...this.state.nodes, newNode];\n    this.setState({ nodes });\n  }\n\n  addChild(id) {\n    return () => {\n      id = id.split(\".\").map((str) => parseInt(str));\n      const nodes = this.initialized–°opy(this.state.nodes);\n      let changingNode = nodes[id[0] - 1];\n\n      if (id.length > 1) {\n        for (let i = 1; i < id.length; i++) {\n          changingNode = changingNode.children[id[i] - 1];\n        }\n      }\n\n      if (changingNode.children === undefined) {\n        changingNode.children = [];\n      }\n\n      id = `${id.join(\".\")}.${changingNode.children.length + 1}`;\n\n      changingNode.children = [\n        ...changingNode.children,\n        {\n          children: undefined,\n          changeTitle: this.changeTitle(id),\n          removeNode: this.removeNode(id),\n          addChild: this.addChild(id),\n          id,\n          title: \"\",\n        },\n      ];\n\n      this.setState({ nodes });\n    };\n  }\n\n  removeNode(id) {\n    return () => {\n      id = id.split(\".\").map((str) => parseInt(str));\n      const nodes = this.initialized–°opy(this.state.nodes);\n\n      if (id.length === 1) {\n        const newNodes = [\n          ...nodes.slice(0, [id[0] - 1]),\n          ...nodes.slice(id[0]),\n        ];\n\n        this.setState({ nodes: this.initialized–°opy(newNodes) });\n      } else {\n        let changingNode = nodes[id[0] - 1];\n\n        for (let i = 2; i < id.length; i++) {\n          changingNode = changingNode.children[id[i - 1] - 1];\n        }\n\n        const index = id[id.length - 1] - 1;\n\n        const newChildren = [\n          ...changingNode.children.slice(0, index),\n          ...changingNode.children.slice(index + 1),\n        ];\n        changingNode.children = newChildren;\n\n        this.setState({ nodes: this.initialized–°opy(nodes) });\n      }\n    };\n  }\n\n  saveState() {\n    this.setState({ savedNodes: this.initialized–°opy(this.state.nodes) });\n  }\n\n  loadState() {\n    this.setState({ nodes: this.initialized–°opy(this.state.savedNodes) });\n  }\n\n  onTextChange(e) {\n    this.setState({ nodes: this.initialized–°opy(JSON.parse(e.target.value)) });\n  }\n\n  nodesToString() {\n    return JSON.stringify(this.simplify(this.state.nodes), undefined, 2);\n  }\n\n  simplify(nodes) {\n    const nodesCopy = [];\n    for (let i = 0; i < nodes.length; i++) {\n      const { children, title } = nodes[i];\n      const hasChildren = children !== undefined && children.length > 0;\n      nodesCopy[i] = {\n        title,\n        children: hasChildren ? this.simplify(children) : undefined,\n      };\n    }\n    return nodesCopy;\n  }\n\n  render() {\n    const { nodes, savedNodes } = this.state;\n    const {\n      addRootElement,\n      saveState,\n      loadState,\n      onTextChange,\n      nodesToString,\n    } = this;\n    const hasSaved = savedNodes.length !== 0;\n\n    return (\n      <div className=\"Tree\">\n        <div className=\"Tree-LeftSide\">\n          <ControlPanel {...{ hasSaved, saveState, loadState }} />\n          <ul className=\"Nodes\">\n            {nodes.map((nodeProps) => {\n              const { id, ...others } = nodeProps;\n              return <TreeNode key={id} {...others} />;\n            })}\n          </ul>\n          <AddButton onClick={addRootElement} />\n        </div>\n\n        <div className=\"download-buttons\">\n          <Download data={this.simplify(this.state.nodes)} />\n        </div>\n\n        <div className=\"Tree-RightSide\">\n          <TextView value={nodesToString()} onChange={onTextChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tree;\n","export const DEFAULT_NODES = [\n  {\n    title: \"Tea\",\n    children: [\n      {\n        title: \"Black\",\n        children: [\n          {\n            title: \"Assam\",\n          },\n          {\n            title: \"Earl Grey\",\n          },\n          {\n            title: \"Lapsang Souchong\",\n          },\n        ],\n      },\n      {\n        title: \"Green\",\n        children: [\n          {\n            title: \"Japanese Sencha\",\n          },\n          {\n            title: \"Jasmine Pearls\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: \"Coffee\",\n    children: [\n      {\n        title: \"Espresso\",\n      },\n      {\n        title: \"Mochaccino\",\n      },\n      {\n        title: \"Flat White\",\n      },\n      {\n        title: \"Iced Latte\",\n        children: [\n          {\n            title: \"Vanilla\",\n          },\n          {\n            title: \"Gingerbread\",\n          },\n        ],\n      },\n    ],\n  },\n  {\n    title: \"Milk\",\n  },\n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}